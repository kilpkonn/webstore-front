stages:
  - install_dependencies
  - build
  - package
  - deploy

before_script:
  - export APP_CONTAINER_NAME=webstore-front-container

install_dependencies webstore:
  stage: install_dependencies
  image: node:11-alpine
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules/
  script:
    - yarn install
  only:
    changes:
      - package-lock.json

build webstore:
  stage: build
  image: node:11-alpine
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules/
    policy: pull
  artifacts:
    paths:
      - dist
  tags:
    - webstore
  variables:
    api: localhost/api
  script:
    - cat ./deploy/angular/proxy.conf.json > ./proxy.conf.json
    - node --max_old_space_size=3072 node_modules/@angular/cli/bin/ng build --prod
  only:
    - master
    - tags

package webstore:
  stage: package
  tags:
    - webstore
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_TOKEN
    - bash ./scripts/package.sh
  only:
    - master
    - tags

deploy webstore:
  stage: deploy
  tags:
    - webstore
  script:
    - ssh -i ~/.ssh/id_deploy $CI_DEPLOY_USER@$CI_DEPLOY_SERVER env CI_REGISTRY_USER=$CI_REGISTRY_USER CI_REGISTRY_REPOSITORY=$CI_REGISTRY_REPOSITORY CI_COMMIT_SHORT_SHA=$CI_COMMIT_SHORT_SHA APP_CONTAINER_NAME=$APP_CONTAINER_NAME 'bash -s' < ./scripts/deploy.sh
  only:
    - master
    - tags
